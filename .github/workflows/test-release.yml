name: Test Release System

on:
  workflow_dispatch:
    inputs:
      test_version:
        description: 'Test version to create (e.g., 1.5.0-test)'
        required: true
        default: '1.5.0-test'
        type: string

permissions:
  contents: write

jobs:
  test-release:
    name: Test Release Creation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create Test Tag
        run: |
          TEST_VERSION="${{ inputs.test_version }}"
          echo "Creating test tag v$TEST_VERSION"
          git tag "v$TEST_VERSION"
          git push origin "v$TEST_VERSION"

      - name: Create Test Release
        run: |
          TEST_VERSION="${{ inputs.test_version }}"
          
          # Create release notes
          RELEASE_NOTES="## 🧪 Test Release v$TEST_VERSION

          This is a test release to verify the automatic release system is working correctly.

          ### Test Information:
          - **Test version:** $TEST_VERSION
          - **Test date:** $(date '+%Y-%m-%d %H:%M:%S UTC')
          - **Commit:** ${{ github.sha }}
          - **Workflow:** Test Release System

          ---
          *This is a test release and can be safely deleted.*"

          # Create the test release
          echo "Creating test release v$TEST_VERSION..."
          gh release create "v$TEST_VERSION" \
            --title "Test Release v$TEST_VERSION" \
            --notes "$RELEASE_NOTES" \
            --prerelease || {
              echo "⚠️ Test release creation failed"
              exit 1
            }

      - name: Verify Test Release
        run: |
          TEST_VERSION="${{ inputs.test_version }}"
          echo "Verifying test release v$TEST_VERSION..."
          
          # Wait a moment for GitHub to process
          sleep 5
          
          # Check if release exists
          if gh release view "v$TEST_VERSION" >/dev/null 2>&1; then
            echo "✅ Test release v$TEST_VERSION successfully created"
            
            # Get release details
            RELEASE_URL=$(gh release view "v$TEST_VERSION" --json url --jq '.url')
            echo "Test release URL: $RELEASE_URL"
          else
            echo "❌ Test release v$TEST_VERSION not found"
            exit 1
          fi

      - name: Cleanup Test Release
        if: always()
        run: |
          TEST_VERSION="${{ inputs.test_version }}"
          echo "Cleaning up test release v$TEST_VERSION..."
          
          # Delete the test release
          if gh release view "v$TEST_VERSION" >/dev/null 2>&1; then
            gh release delete "v$TEST_VERSION" --yes || echo "Failed to delete release"
          fi
          
          # Delete the test tag
          if git show-ref --tags | grep -q "refs/tags/v$TEST_VERSION"; then
            git push origin --delete "v$TEST_VERSION" || echo "Failed to delete tag"
          fi
          
          echo "✅ Test cleanup completed"

      - name: Test Results Summary
        run: |
          TEST_VERSION="${{ inputs.test_version }}"
          echo "## 🧪 Test Release System Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Tag Creation | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "| Release Creation | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "| Release Verification | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "| Cleanup | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Test version:** $TEST_VERSION" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎉 **The automatic release system is working correctly!**" >> $GITHUB_STEP_SUMMARY